ext {
  minSdkVersion = 16
  compileSdkVersion = 26
  targetSdkVersion = compileSdkVersion
  buildToolsVersion = '26.0.2'
  versionMajor = 1
  versionMinor = 0
  versionPatch = 0
  versionCode = versionMajor * 100000 + versionMinor * 100 + versionPatch
  versionName = "${versionMajor}.${versionMinor}.${versionPatch}"

  kotlinVersion = "1.1.51"
  daggerVersion = "2.11"
  javaxAnnotationVersion = "10.0-b28"
  architectureComponentsVersion = "1.0.0-rc1"
  rxBindingVersion = "2.0.0"
  rxJava2Version = "2.1.0"
  rxAndroidVersion = "2.0.1"
  retrofit2Version = "2.3.0"
  gsonVersion = "2.7"
  okhttpVersion = "3.8.1"
  androidSupportVersion = "25.1.1"
  glideVerison = "4.0.0-RC1"

  //Testing
  junitVersion = "4.12"
  mockitoVersion = "1.5.0"

  libraries = [dagger           : "com.google.dagger:dagger:${daggerVersion}",
               room             : "android.arch.persistence.room:runtime:${architectureComponentsVersion}",
               roomRxJava       : "android.arch.persistence.room:rxjava2:${architectureComponentsVersion}",
               lifecycle        : "android.arch.lifecycle:runtime:${architectureComponentsVersion}",
               lifecycleExt     : "android.arch.lifecycle:extensions:${architectureComponentsVersion}",
               rxBinding        : "com.jakewharton.rxbinding2:rxbinding:${rxBindingVersion}",
               rxKotlin2        : "io.reactivex.rxjava2:rxkotlin:${rxJava2Version}",
               rxAndroid        : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
               retrofit2        : "com.squareup.retrofit2:retrofit:${retrofit2Version}",
               retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofit2Version}",
               retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:${retrofit2Version}",
               gson             : "com.google.code.gson:gson:${gsonVersion}",
               okhttp           : "com.squareup.okhttp3:okhttp:${okhttpVersion}",
               okhttpLogging    : "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}",
               glide            : "com.github.bumptech.glide:glide:${glideVerison}",]

  aptLibraries = [daggerCompiler   : "com.google.dagger:dagger-compiler:${daggerVersion}",
                  roomCompiler     : "android.arch.persistence.room:compiler:${architectureComponentsVersion}",
                  lifecycleCompiler: "android.arch.lifecycle:compiler:${architectureComponentsVersion}"]

  provided = [javaxAnnotation: "org.glassfish:javax.annotation:${javaxAnnotationVersion}",]

  testLibraries = [junit        : "junit:junit:${junitVersion}",
                   mockitoKotlin: "com.nhaarman:mockito-kotlin:${mockitoVersion}",
                   kotlinStdlib : "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
                   roomTest     : "android.arch.persistence.room:testing:${architectureComponentsVersion}"]
}